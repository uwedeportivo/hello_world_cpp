load("@rules_foreign_cc//foreign_cc:defs.bzl", "cmake")

filegroup(
    name = "rocksdb-srcs",
    srcs = glob(["rocksdb/**"]),
    visibility = ["//visibility:public"],
)

cmake(
    name = "rocksdb",
    lib_source = ":rocksdb-srcs",
    out_static_libs = ["librocksdb.a"],
    deps = [
        "@gflags",
        "@snappy",
    ],
)

cc_library(
    name = "sqlitecpp",
    srcs = glob(["SQLiteCpp/src/*.cpp"]),
    hdrs = glob(["SQLiteCpp/include/SQLiteCpp/*.h"]),
    copts = ["-Isqlite3"],
    defines = [
        "SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION",
        "SQLITE_OMIT_LOAD_EXTENSION",
    ],
    strip_include_prefix = "SQLiteCpp/include",
    deps = [
        "@sqlite3",
    ],
)

cc_library(
    name = "peg",
    hdrs = ["cpp-peglib/peglib.h"],
    deps = [],
)

cc_library(
    name = "httplib",
    hdrs = ["cpp-httplib/httplib.h"],
    defines = [
        "CPPHTTPLIB_OPENSSL_SUPPORT",
    ],
    deps = [
        "@openssl//:crypto",
        "@openssl//:ssl",
    ],
)

cc_binary(
    name = "hello_world",
    srcs = ["hello_world.cc"],
    deps = [
        "httplib",
        ":greeting_cc_proto",
        ":peg",
        ":rocksdb",
        ":sqlitecpp",
        "//marl",
        "@abseil-cpp//absl/strings",
        "@llvm-project//llvm:Support",
        "@openssl//:crypto",
        "@openssl//:ssl",
    ],
)

cc_proto_library(
    name = "greeting_cc_proto",
    deps = [":greeting_proto"],
)

proto_library(
    name = "greeting_proto",
    srcs = ["greeting.proto"],
)

cc_test(
    name = "hello_world_test",
    size = "small",
    srcs = ["hello_world_test.cc"],
    deps = [
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)
